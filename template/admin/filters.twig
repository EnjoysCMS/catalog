{% extends '@a/layout.twig' %}
{% block content %}
    {% do asset('css', [
        {0: module.path ~ '/node_modules/select2/dist/css/select2.css','minify': false},
        {0: module.path ~ '/node_modules/@ttskch/select2-bootstrap4-theme/dist/select2-bootstrap4.css','minify': false},
    ]) %}

    {% do asset('js', [
        {0: module.path ~ '/node_modules/select2/dist/js/select2.full.js','minify': false },
    ]) %}

    <script>


        $(function () {
            $(".filters-select").select2({
                width: "100%",
                theme: 'bootstrap4',
                allowClear: true,
                placeholder: 'select..',
                ajax: {
                    url: "{{ path('@a/catalog/tools/find-option-keys') }}",
                    dataType: 'json',
                    // delay: 250,
                    data: function (params) {
                        return {
                            query: params.term
                        };
                    },
                    processResults: function (data) {
                        return {
                            results: data
                        };
                    }

                },
                templateResult: function (result) {
                    if (result.loading) {
                        return result.text;
                    }
                    let $container = $(
                        "<div class='select2-result-repository clearfix'>" +
                        "<span class='select2-result---name'></span> " +
                        "<span class='select2-result---unit small text-muted'></span>" +
                        "</div>"
                    );

                    $container.find(".select2-result---name").text(result.name);
                    $container.find(".select2-result---unit").text(result.unit);

                    return $container;
                },
                templateSelection: function (result) {
                    return result.text || (result.name + (result.unit ? ' (' + result.unit + ')' : ''));
                }
            });

        });

        let select = document.querySelector('select#category');
        let filtersBody = document.getElementById('filters');
        let categoryId;

        function drawFilters(data) {
            filtersBody.innerHTML = '';

            let addBtn = document.createElement('button');
            addBtn.id = 'add-filter';
            addBtn.setAttribute('data-toggle', 'modal')
            addBtn.setAttribute('data-target', '#addFilterModal')
            addBtn.classList.add('btn', 'btn-sm', 'btn-primary', 'mb-3');
            addBtn.innerText = 'Добавить фильтры';

            filtersBody.appendChild(document.createElement('div').appendChild(addBtn));



            let table = document.createElement('table');
            table.classList.add('table')
            let template = document.getElementById('filterRow');
            data.forEach(function (item) {
                let row = template.content.cloneNode(true);
                let filter = row.querySelector('.filter');
                let tr = row.querySelector('tr');
                let order = row.querySelector('.order input');
                let type = row.querySelector('.type');

                filter.innerText = item.option.name;


                tr.dataset.filterId = item.id;
                type.innerText = item.type;
                order.value = item.order;

                row.querySelector('.delete-filter').addEventListener('click', function (e) {
                    e.preventDefault()
                    fetch("{{ path('catalog/admin/filter/delete') }}", {
                        method: 'DELETE',
                        body: JSON.stringify({
                            filterId: tr.dataset.filterId
                        })
                    }).then(() => loadCategoryFilters(categoryId))
                });

                order.addEventListener('change', function (e) {
                    e.preventDefault()
                    fetch("{{ path('catalog/admin/filter/update') }}", {
                        method: 'PATCH',
                        body: JSON.stringify({
                            filterId: tr.dataset.filterId,
                            order: order.value
                        })
                    }).then(() => loadCategoryFilters(categoryId))
                });

                table.appendChild(row)
            });
            filtersBody.appendChild(table);
        }

        const loadCategoryFilters = function () {

            const url = new URL("{{ url('catalog/admin/api/get-category-filters') }}");
            url.searchParams.append('category', categoryId);
            fetch(url.toString(), {
                method: 'GET'
            }).then(response => response.json())
                .then(data => drawFilters(data))
        };

        const fillCategorySelect = function () {
            fetch("{{ path('catalog/admin/api/get-category-tree') }}", {
                method: 'GET'
            })
                .then(response => response.json())
                .then(function (data) {
                    Object.values(data).forEach(function (v) {
                        let option = new Option(v.title.replaceAll("&nbsp;", "\u00A0"), v.id);
                        if (v.id === 0) {
                            option = new Option('Выберите категорию...', v.id);
                        }
                        select.append(option);
                    })

                    select.addEventListener('change', function () {
                        categoryId = select.value;
                        loadCategoryFilters()
                    })
                })
        };


        fillCategorySelect();

        document.querySelector('form[name="addFilters"]').addEventListener('submit', function (e) {
            e.preventDefault()
            let formData = new FormData(e.target);
            let optionKeys = [];
            formData.forEach((v) => {
                optionKeys.push(v)
            });

            //console.log(categoryId)

            fetch("{{ path('catalog/admin/filter/add') }}", {
                method: 'PUT',
                body: JSON.stringify({
                    category: categoryId,
                    optionKeys: optionKeys,
                    order: 0,
                    type: 'checkbox'
                })
            }).then(function () {
                $('#addFilterModal').modal('hide')
                return loadCategoryFilters(categoryId);
            })
        });

    </script>
    <section class="content">
        <div class="card">
            <!-- /.card-header -->
            <div class="card-body">
                <div>
                    <label for="category">Категория</label>
                    <select name="category" id="category"
                            aria-controls="example"
                            class="custom-select custom-select-sm form-control form-control-sm mb-3">

                    </select>
                </div>
            </div>

            <!-- /.card-body -->
        </div>
        <!-- /.card -->
        <div class="card">
            <div class="card-header">
                <h2 class="card-title">Активные фильтры</h2>
            </div>

            <!-- /.card-header -->
            <div class="card-body">
                <div id="filters">
                    <h2>Выберите категорию</h2>
                </div>
            </div>
            <!-- /.card-body -->
        </div>
        <!-- /.card -->
    </section>

    <div class="modal fade" id="addFilterModal">
        <div class="modal-dialog modal-lg">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-body">
                    <form id="addFilters" name="addFilters">
                        <div class='form-group'><label class="form-label" for="optionKeys">Добавление фильтров для категории  <a
                                    class="align-top btn btn-xs btn-warning"
                                    id="fill-from-parent"
                                    data-id="2">
                                    заполнить из родительской категории</a> </label>
                            <select class="filters-select form-select form-control" multiple name="optionKeys[]"
                                    id="optionKeys" aria-describedby="optionKeysHelp">

                            </select>
                            <small id="optionKeysHelp" class="form-text">Добавление фильтров для категорий (можно выбрать несколько).
                                Берутся из параметров товара (опций)</small>
                        </div>
                        <input type="submit" class="btn btn-primary">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Закрыть</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <template id="filterRow">
        <tr>
            <td class="filter"></td>
            <td class="type">

            </td>
            <td class="order">
                <input name="order" type="number">
            </td>
            <td class="action">
                <button class="delete-filter btn btn-sm btn-danger">Удалить фильтр</button>
            </td>
        </tr>

    </template>

    {% block additional %}
    {% endblock %}

{% endblock %}
